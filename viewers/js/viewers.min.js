let map;const geoFirestore=new GeoFirestore(firestore),geoCollectionRef=geoFirestore.collection("viewers");let subscription;const markers={},radius=50;let geocoder,returnArray=[],markersList=[];function setMapOnAll(e){for(let o=0;o<markers.length;o++)markers[o].setMap(e)}function queryFirestore(e){markersList.length>1?markersList.forEach(e=>{removeMarker(e)}):console.log("markers are empty"),returnArray=[],markersList=[],subscription&&(console.log("Old query subscription cancelled"),subscription(),subscription=!1);const o=geoCollectionRef.near({center:new firebase.firestore.GeoPoint(e.lat,e.lng),radius:radius});console.log("New query subscription created"),subscription=o.onSnapshot(e=>{console.log(e.docChanges()),e.docChanges().forEach(e=>{let o=.6214*e.doc.distance;returnArray.push({placeInformation:e.doc.data(),distanceInMiles:parseFloat(o.toFixed(1))})}),console.log(returnArray),e.docChanges().forEach(e=>{switch(e.type){case"added":return console.log("Snapshot detected added marker"),addMarker(e.doc.id,e.doc.data());case"modified":return console.log("Snapshot detected modified marker"),updateMarker(e.doc.id,e.doc.data());case"removed":return console.log("Snapshot detected removed marker"),removeMarker(e.doc.id,e.doc.data())}})}),console.log(markersList)}function waitForElement(){void 0!==map?(map.setCenter(userLocation),new google.maps.Marker({position:userLocation,map:map,icon:"./assets/bluedot.png"}),getInFirestore(userLocation)):setTimeout(waitForElement,250)}function getInFirestore(e){e.lat=Number(e.lat.toFixed(1)),e.lng=Number(e.lng.toFixed(1));const o=Geokit.hash(e);geoCollectionRef.doc(o).get().then(t=>{let n=t.data();n?(n.count++,console.log("Provided key is in Firestore, updating document: ",JSON.stringify(n)),updateInFirestore(o,n)):(n={count:1,coordinates:new firebase.firestore.GeoPoint(e.lat,e.lng)},console.log("Provided key is not in Firestore, adding document: ",JSON.stringify(n)),createInFirestore(o,n))},e=>{console.log("Error: "+e)})}function createInFirestore(e,o){geoCollectionRef.doc(e).set(o).then(()=>{console.log("Provided document has been added in Firestore")},e=>{console.log("Error: "+e)})}function updateInFirestore(e,o){geoCollectionRef.doc(e).update(o).then(()=>{console.log("Provided document has been updated in Firestore")},e=>{console.log("Error: "+e)})}navigator.geolocation.getCurrentPosition(e=>{userLocation={lat:e.coords.latitude,lng:e.coords.longitude},waitForElement()},console.log);var checkbox=document.querySelector('input[type="checkbox"]');function initMap(){var e,o;geocoder=new google.maps.Geocoder,map=new google.maps.Map(document.getElementById("map"),{center:{lat:43.3083,lng:-85.9279},zoom:8});let t=new google.maps.InfoWindow({content:"Click the map to get Lat/Lng!",position:e});t.open(map),map.addListener("click",o=>{let n,r;t.close(),n=o.latLng.toJSON().lat,r=o.latLng.toJSON().lng,parseFloat(n),parseFloat(r),document.getElementById("element_1").value=n,document.getElementById("element_2").value=r,checkbox.checked?geocodeLatLng(n,r):(e={lat:parseFloat(n),lng:parseFloat(r)},map.setCenter(e),setMapOnAll(null),queryFirestore(e))}),map.addListener("idle",function(){var e=map.getCenter(),t={lat:e.lat(),lng:e.lng()};(!o||Geokit.distance(o,t)>.7*radius)&&(o=t,queryFirestore(t),console.log("new query"))})}function addMarker(e,o){if(markersList.push(e),!markers[e]){var t=new google.maps.InfoWindow({content:"City: "+o.city+"\nFact: "+o.fact});markers[e]=new google.maps.Marker({position:{lat:o.coordinates.latitude,lng:o.coordinates.longitude},map:map}),markers[e].addListener("click",function(){t.open(map,markers[e])})}}function removeMarker(e){markers[e]&&(google.maps.event.clearListeners(markers[e],"click"),markers[e].setMap(null),markers[e]=null)}function updateMarker(e,o){if(markers[e]){var t=new google.maps.InfoWindow({content:"This town is called"+o.city});markers[e].setPosition({lat:o.coordinates.latitude,lng:o.coordinates.longitude}),google.maps.event.clearListeners(markers[e],"click"),markers[e].addListener("click",function(){t.open(map,markers[e])})}else addMarker(e,o)}function consoleer(e,o,t,n){console.log(e+o+t+n)}function thunkIt(){let e=document.getElementById("element_1").value,o=document.getElementById("element_2").value,t=document.getElementById("element_3").value,n=document.getElementById("element_4").value;document.getElementById("element_1").value="",document.getElementById("element_2").value="",document.getElementById("element_3").value="",document.getElementById("element_4").value="",userLocation={lat:e,lng:o},getIntoFirestore(userLocation,t,n),console.log("location recieved, trying to send to firestore")}function getIntoFirestore(e,o,t){e.lat=parseFloat(e.lat),e.lng=parseFloat(e.lng);const n=Geokit.hash(e);geoCollectionRef.doc(n).get().then(r=>{let a=r.data();a?(a.count++,console.log("Provided key is in Firestore, updating document: ",JSON.stringify(a)),updateIntoFirestore(n,a)):(a={count:1,coordinates:new firebase.firestore.GeoPoint(e.lat,e.lng),city:o,fact:t},console.log("Provided key is not in Firestore, adding document: ",JSON.stringify(a)),createIntoFirestore(n,a))},e=>{console.log("Error: "+e)})}function createIntoFirestore(e,o){geoCollectionRef.doc(e).set(o).then(()=>{console.log("Provided document has been added in Firestore")},e=>{console.log("Error: "+e)})}function updateIntoFirestore(e,o){geoCollectionRef.doc(e).update(o).then(()=>{console.log("Provided document has been updated in Firestore")},e=>{console.log("Error: "+e)})}let returnAddress;function geocodeLatLng(e,o){let t={lat:e,lng:o};geocoder.geocode({location:t},(e,o)=>{"OK"===o?e[0]?(console.log(e[0].address_components[2].long_name),document.getElementById("element_3").value=e[0].address_components[2].long_name):console.log("No results found"):console.log("Geocoder failed due to: "+o)})}document.getElementById("submitForm").addEventListener("click",function(){thunkIt()});